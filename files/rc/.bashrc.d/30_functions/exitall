#! /usr/bin/env bash

# ~/.bashrc.d/30_functions/exitall
#
# Creates functions called bash, exit, and exitall
# which do nearly the same as the original commmands,
# IE, open a new shell, and exit that shell, but
# allow for more information to be gathered when
# opening and closing shells
#

function bash() {
  # trap "echo $? $! && [[ $SHLVL -gt 1 ]] && exit $?" SIGCHLD
  /usr/bin/env bash "$@"
  local returncode=$?
  if [[ $returncode -eq 196 && $SHLVL -gt 1 ]]; then #if not oldest parent
    exit $returncode 2>/dev/null                     #redir "exit" msg to null
  elif [[ $returncode -eq 196 ]]; then               #if oldest parent
    echo "Successfully closed all subshells"
  else
    echo "Exit $returncode"
  fi
  echo "Shell level $SHLVL"
  return $returncode
}

function exit() { exitall "$@"; }
function exitall() {
  exit_code=$?
  [[ ! $(caller 0) ]] && set -- all # if exitall called directly, set $1 to all
  if [[ ${1,,} == "all" ]]; then    #if first argument is "all"
    builtin exit 196 2>/dev/null    # code to close recursively
  else
    (builtin exit "$exit_code")   # preserve exit code if none provided
    builtin exit "$@" 2>/dev/null # passthrough argument to exit
  fi
}
