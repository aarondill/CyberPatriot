#! /usr/bin/env bash

# ~/.bashrc.d/30_functions/exitall
#
# Creates functions called bash, exit, and exitall
# which do nearly the same as the original commmands,
# IE, open a new shell, and exit that shell, but
# allow for more information to be gathered when
# opening and closing shells
#

function bash() {
  # trap "echo $? $! && [[ $SHLVL -gt 1 ]] && exit $?" SIGCHLD
  command bash "$@"
  local returncode="$?"
  if [ "$returncode" -eq 196 ]; then
    [ "$SHLVL" -le 1 ] || builtin exit "$returncode"
    # oldest parent
    printf '%s\n' "Successfully closed all subshells" >&2
  fi
  printf '%s\n' "Shell level $SHLVL" >&2
  return "$returncode"
}

function exit() { exitall "$@"; }
function exitall() {
  local exit_code=$?
  # if exitall called directly, or passed 'all'
  if ! caller 0 &>/dev/null || [ "${1,,}" == "all" ]; then
    builtin exit 196 # code to close recursively
  fi
  (builtin exit "$exit_code")   # preserve exit code if none provided
  builtin exit "$@" 2>/dev/null # passthrough argument to exit
}
