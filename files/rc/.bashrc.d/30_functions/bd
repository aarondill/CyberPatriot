#!/usr/bin/env bash

# ~/.bashrc.d/30_functions/bd
#
# Sets up bd function for going up parent directories.
# taken from https://github.com/vigneshwaranr/bd and
# modified to work better
#
function _bd_help_msg() {
  printf '%s\n' "Usage: bd [OPTION]... [PATTERN]"
  printf '%s\n' "Quickly go back to a specific parent directory in bash."

  printf '%s\n' "OPTIONS: "
  printf '%s\n' "  -e          PATTERN must fully match directory name"
  printf '%s\n' "  -i          PATTERN is case SENSITIVE"
  printf '%s\n' "  -h, --help  Display this message"

  return 0
}
newpwd() {
  local oldpwd=$1             # store old
  shift 1                     # remove oldpwd
  shopt -s nocasematch        # set case insensive default
  local exact=0               # default to false
  while getopts ':ie' opt; do # check each argument
    case "$opt" in
    i) shopt -u nocasematch ;; # set case sensitive
    e) exact=1 ;;              # Set exact match
    \?)
      printf '%s\n' "Invalid option: -$OPTARG" >&2
      return 2
      ;;
    esac
  done
  shift "$((OPTIND - 1))"
  local pattern="$*"
  if [ "$exact" -eq 1 ]; then # if exact
    # fully match - removes everything after the pattern
    printf '%s\n' "${oldpwd/\/$pattern\/*/\/$pattern}" # /pattern/* -- >/pattern
    return 0
  fi
  local findRegex="^(.+)?${pattern}[^/]*\/"
  [[ $oldpwd =~ $findRegex ]] || return 1
  printf '%s\n' "${BASH_REMATCH[0]}"
}

function bd() {
  # Show help
  [ "$#" -eq 0 ] && _bd_help_msg && return 2
  for arg in "$@"; do
    case "$arg" in
    '-?' | --help | -h) _bd_help_msg && return 0 ;;
    esac
  done

  # Allow `bd -` to act like `cd -`
  # And allow `bd /` --> `cd /`
  # And allow `bd /` --> `cd /`
  case "$1" in
  - | / | ~) builtin cd "$1" || return && return ;;
  esac

  local newpwd
  newpwd=$(newpwd "$PWD" "$@") || return
  # Check that the newpwd is not the current working directory
  if [ -z "$newpwd" ] || [ "$newpwd" = "$PWD" ]; then
    printf '%s\n' "No such occurrence." >&2
    return 1
  fi

  # Output found
  printf '%s\n' "$newpwd"
  if [ -t 1 ]; then # If stdout is tty, cd to found
    builtin cd "$newpwd" || return
  fi
}

# Add autocomplete support for bd for bash.
function _bd() {
  local IFS cur completions
  # Handle spaces in filenames by setting the delimeter to be a newline.
  IFS=$'\n'
  # Current argument on the command line.
  cur=${COMP_WORDS[COMP_CWORD]}

  # Available directories to autcomplete to.
  completions=$(dirname "$(pwd)")
  completions="${completions//\//$'\n'}"$'\n/'

  while read -r -d $'\n'; do
    COMPREPLY+=("$REPLY")
  done < <(compgen -W "$completions" -- "$cur")
}
complete -F _bd bd
